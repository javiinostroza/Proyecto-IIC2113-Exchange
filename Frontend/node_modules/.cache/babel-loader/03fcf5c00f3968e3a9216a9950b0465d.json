{"ast":null,"code":"var _jsxFileName = \"/home/javiera/Documents/UNIVERSIDAD/2020-2/Dise\\xF1o Detallado de Software/exchange-ten-secondary/src/pages/Home/Logged.jsx\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Tabs, Row, Col, Divider } from 'antd';\nimport Container from '../../components/layout/Container';\nimport FormattedStatistic from '../../components/FormattedStatistic';\nimport api from '../../api';\nconst style = {\n  statisticGrid: {\n    width: '50%'\n  }\n};\n\nconst HomeLogged = () => {\n  const [cryptocurrencies, setCryptocurrencies] = useState([]);\n  const [market, setMarket] = useState([]);\n  React.useEffect(() => {\n    api.authFetch('/cryptocurrencies', {\n      method: 'GET'\n    }).then(async response => {\n      const body = await response.json();\n      setCryptocurrencies(body.cryptocurrencies);\n    });\n    api.authFetch('/markets', {\n      method: 'GET'\n    }).then(async response => {\n      const body = await response.json();\n      setMarket(body[0]);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, cryptocurrencies.map(cryptocurrency => /*#__PURE__*/React.createElement(Col, {\n    span: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: cryptocurrency.name,\n    type: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Grid, {\n    style: style.statisticGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormattedStatistic, {\n    title: \"Compra\",\n    value: cryptocurrency.buying_price,\n    prefix: \"$\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Card.Grid, {\n    style: style.statisticGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormattedStatistic, {\n    title: \"Venta\",\n    value: cryptocurrency.selling_price,\n    prefix: \"$\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Criptomonedas en el mercado\"), cryptocurrencies.map(cryptocurrency => {\n    const {\n      name\n    } = cryptocurrency;\n    return /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormattedStatistic, {\n      title: `${name}`,\n      value: market[name.toLowerCase()],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }));\n  }));\n};\n\nexport default HomeLogged;","map":{"version":3,"sources":["/home/javiera/Documents/UNIVERSIDAD/2020-2/DiseÃ±o Detallado de Software/exchange-ten-secondary/src/pages/Home/Logged.jsx"],"names":["React","useState","useHistory","Card","Tabs","Row","Col","Divider","Container","FormattedStatistic","api","style","statisticGrid","width","HomeLogged","cryptocurrencies","setCryptocurrencies","market","setMarket","useEffect","authFetch","method","then","response","body","json","map","cryptocurrency","name","buying_price","selling_price","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Tabs, Row, Col, Divider } from 'antd';\n\nimport Container from '../../components/layout/Container';\nimport FormattedStatistic from '../../components/FormattedStatistic';\nimport api from '../../api';\n\nconst style = {\n  statisticGrid: {\n    width: '50%',\n  },\n};\n\nconst HomeLogged = () => {\nconst [cryptocurrencies, setCryptocurrencies] = useState([]);\nconst [market, setMarket] = useState([]);\n\n  React.useEffect(() => {\n    api.authFetch('/cryptocurrencies', { method: 'GET' }).then(async (response) => {\n      const body = await response.json();\n      setCryptocurrencies(body.cryptocurrencies);\n    });\n\n    api.authFetch('/markets', { method: 'GET' }).then(async (response) => {\n      const body = await response.json();\n      setMarket(body[0]);\n    });\n  }, []);\n\n  return (\n    <Container>\n      <Row justify=\"space-around\">\n        {cryptocurrencies.map((cryptocurrency) => (\n          <Col span={10}>\n            <Card title={cryptocurrency.name} type=\"inner\">\n              <Card.Grid style={style.statisticGrid}>\n                <FormattedStatistic title=\"Compra\" value={cryptocurrency.buying_price} prefix=\"$\" />\n              </Card.Grid>\n              <Card.Grid style={style.statisticGrid}>\n                <FormattedStatistic title=\"Venta\" value={cryptocurrency.selling_price} prefix=\"$\" />\n              </Card.Grid>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n      <Divider />\n      <h1>Criptomonedas en el mercado</h1>\n      {cryptocurrencies.map((cryptocurrency) => {\n        const { name } = cryptocurrency;\n        return (\n          <Col>\n            <FormattedStatistic title={`${name}`} value={market[name.toLowerCase()]} />\n          </Col>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default HomeLogged;\n"]},"metadata":{},"sourceType":"module"}