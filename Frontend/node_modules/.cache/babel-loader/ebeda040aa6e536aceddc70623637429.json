{"ast":null,"code":"var _jsxFileName = \"/home/javiera/Documents/UNIVERSIDAD/2020-2/Dise\\xF1o Detallado de Software/exchange-ten-secondary/src/pages/Transaction/index.jsx\";\nimport React, { useState } from 'react';\nimport { Button, message, Form, Input, Select, Row, Col, Slider } from 'antd';\nimport api from '../../api';\nimport Container from '../../components/layout/Container';\n\nconst Transaction = () => {\n  var _wallet$balances;\n\n  const [needFetch, setNeedFetch] = useState(true);\n  const [cryptocurrencies, setCryptocurrencies] = useState([]);\n  const [wallet, setWallet] = useState({});\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const cryptocurrenciesResponse = await api.authFetch('/cryptocurrencies', {\n        method: 'GET'\n      });\n      const fetchedCryptocurrencies = (await cryptocurrenciesResponse.json()).cryptocurrencies;\n      setCryptocurrencies(fetchedCryptocurrencies);\n      const walletResponse = await api.authFetch('/wallets', {\n        method: 'GET'\n      });\n      const fetchedWallet = (await walletResponse.json()).wallet;\n      const balancesResponse = await api.authFetch('/balances', {\n        method: 'GET'\n      });\n      const fetchedBalances = await balancesResponse.json();\n      setWallet({ ...fetchedWallet,\n        ...fetchedBalances\n      });\n    };\n\n    if (needFetch) {\n      fetchData();\n      setNeedFetch(false);\n    }\n  }, [needFetch]);\n\n  const handleFinish = values => {\n    const pond = values.action === 'buy' ? -1 : 1;\n    console.log(\"amount: \", values.amount);\n    api.authFetch('/transactions', {\n      method: 'POST',\n      body: {\n        transaction: {\n          amount: parseInt(values.amount * pond, 10),\n          cryptocurrency_name: values.cryptocurrency_name\n        }\n      }\n    }).then(async response => {\n      if (!response.ok) {\n        message.warning('Error en la transacción');\n      } else {\n        setNeedFetch(true);\n        message.success('Transacción realizada con éxito');\n        window.location.reload();\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Balances\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"CLP: \", wallet.clp), (_wallet$balances = wallet.balances) === null || _wallet$balances === void 0 ? void 0 : _wallet$balances.map(balance => /*#__PURE__*/React.createElement(\"p\", {\n    key: balance.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, `${balance.cryptocurrency.name}: ${balance.amount}`))), cryptocurrencies.map(cryptocurrency => /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    key: cryptocurrency.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, `Precio ${cryptocurrency.name}`), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, `Venta: ${cryptocurrency.selling_price} CLP`), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, `Compra: ${cryptocurrency.buying_price} CLP`)))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    align: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    span: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Crear Transacci\\xF3n\"), /*#__PURE__*/React.createElement(Form, {\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 14\n    },\n    layout: \"horizontal\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: handleFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"\",\n    name: \"action\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Vender / Comprar\",\n    allowClear: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"sell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Vender\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"buy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Comprar\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"\",\n    name: \"cryptocurrency_name\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"BTF / BTH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"BTF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"BTF\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"BTH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"BTH\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"\",\n    name: \"amount\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    min: \"1\",\n    placeholder: \"Monto CLP\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"Confirmar\")))), /*#__PURE__*/React.createElement(Col, {\n    span: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Transaction;","map":{"version":3,"sources":["/home/javiera/Documents/UNIVERSIDAD/2020-2/Diseño Detallado de Software/exchange-ten-secondary/src/pages/Transaction/index.jsx"],"names":["React","useState","Button","message","Form","Input","Select","Row","Col","Slider","api","Container","Transaction","needFetch","setNeedFetch","cryptocurrencies","setCryptocurrencies","wallet","setWallet","useEffect","fetchData","cryptocurrenciesResponse","authFetch","method","fetchedCryptocurrencies","json","walletResponse","fetchedWallet","balancesResponse","fetchedBalances","handleFinish","values","pond","action","console","log","amount","body","transaction","parseInt","cryptocurrency_name","then","response","ok","warning","success","window","location","reload","clp","balances","map","balance","id","cryptocurrency","name","selling_price","buying_price","span","remember","required"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, message, Form, Input, Select, Row, Col, Slider } from 'antd';\nimport api from '../../api';\n\nimport Container from '../../components/layout/Container';\n\nconst Transaction = () => {\n  const [needFetch, setNeedFetch] = useState(true);\n  const [cryptocurrencies, setCryptocurrencies] = useState([]);\n  const [wallet, setWallet] = useState({});\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const cryptocurrenciesResponse = await api.authFetch('/cryptocurrencies', { method: 'GET' });\n      const fetchedCryptocurrencies = (await cryptocurrenciesResponse.json()).cryptocurrencies;\n      setCryptocurrencies(fetchedCryptocurrencies);\n\n      const walletResponse = await api.authFetch('/wallets', { method: 'GET' });\n      const fetchedWallet = (await walletResponse.json()).wallet;\n      const balancesResponse = await api.authFetch('/balances', { method: 'GET' });\n      const fetchedBalances = await balancesResponse.json();\n      setWallet({ ...fetchedWallet, ...fetchedBalances });\n    };\n\n    if (needFetch) {\n      fetchData();\n      setNeedFetch(false);\n    }\n  }, [needFetch]);\n\n  const handleFinish = (values) => {\n    const pond = values.action === 'buy' ? -1 : 1;\n    console.log(\"amount: \", values.amount)\n    api\n      .authFetch('/transactions', {\n        method: 'POST',\n        body: {\n          transaction: {\n            amount: parseInt(values.amount * pond, 10),\n            cryptocurrency_name: values.cryptocurrency_name,\n          },\n        },\n      })\n      .then(async (response) => {\n        if (!response.ok) {\n          message.warning('Error en la transacción');\n        } else {\n          setNeedFetch(true);\n          message.success('Transacción realizada con éxito');\n          window.location.reload();\n        }\n      });\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col span={8}>\n          <p>Balances</p>\n          <p>CLP: {wallet.clp}</p>\n          {wallet.balances?.map((balance) => (\n            <p key={balance.id}>{`${balance.cryptocurrency.name}: ${balance.amount}`}</p>\n          ))}\n        </Col>\n\n        {cryptocurrencies.map((cryptocurrency) => (\n          <Col span={8} key={cryptocurrency.id}>\n            <p>{`Precio ${cryptocurrency.name}`}</p>\n            <p>{`Venta: ${cryptocurrency.selling_price} CLP`}</p>\n            <p>{`Compra: ${cryptocurrency.buying_price} CLP`}</p>\n          </Col>\n        ))}\n      </Row>\n      <br />\n\n      <Row justify=\"center\" align=\"middle\">\n        <Col span={6} />\n        <Col span={18}>\n          <h3>Crear Transacción</h3>\n          <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 14 }}\n            layout=\"horizontal\"\n            initialValues={{ remember: true }}\n            onFinish={handleFinish}\n          >\n            <Form.Item label=\"\" name=\"action\" rules={[{ required: true }]}>\n              <Select placeholder=\"Vender / Comprar\" allowClear>\n                <Select.Option value=\"sell\">Vender</Select.Option>\n                <Select.Option value=\"buy\">Comprar</Select.Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item label=\"\" name=\"cryptocurrency_name\" rules={[{ required: true }]}>\n              <Select placeholder=\"BTF / BTH\">\n                <Select.Option value=\"BTF\">BTF</Select.Option>\n                <Select.Option value=\"BTH\">BTH</Select.Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item label=\"\" name=\"amount\" rules={[{ required: true }]}>\n              <Input type=\"number\" min=\"1\" placeholder=\"Monto CLP\" />\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Confirmar\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col span={0} />\n      </Row>\n    </Container>\n  );\n};\nexport default Transaction;\n"]},"metadata":{},"sourceType":"module"}